---
- name: set docker_portainer_volume
  set_fact: docker_portainer_volume="/opt/docker/portainer"

- name: set docker_portainer_initial_database_file
  set_fact: docker_portainer_initial_database_file=""

- name: create volume directory for data
  file: path={{docker_portainer_volume}}/data state=directory recurse=yes

- name: initial database
  copy:
    src: "{{docker_portainer_initial_database_file}}"
    dest: "{{docker_portainer_volume}}/data/portainer.db"
    mode: 0600
    force: no
  when: docker_portainer_initial_database_file != ""

- name: Deploy stack from portainer service
  docker_stack:
    state: present
    name: portainer
    compose:
      - version: '3.2'
        services:
          agent:
            image: portainer/agent
            environment:
              AGENT_CLUSTER_ADDR: tasks.agent
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - /var/lib/docker/volumes:/var/lib/docker/volumes
            networks:
              - agent_network
            deploy:
              mode: global
              placement:
                constraints: [node.platform.os == linux]

          portainer:
            image: portainer/portainer
            command: -H tcp://tasks.agent:9001 --tlsskipverify
            ports:
              - "9000:9000"
#              - "8000:8000"
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - "{{docker_portainer_volume}}/data:/data"
            networks:
              - agent_network
            deploy:
              mode: replicated
              replicas: 1
              placement:
                constraints: [node.role == manager]

        networks:
          agent_network:
            driver: overlay

        volumes:
          portainer_data:

